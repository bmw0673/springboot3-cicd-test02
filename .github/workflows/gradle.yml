# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  CODEDEPLOY_DEPLOYMENT_GROUP_NAME: ${{ secrets.CODEDEPLOY_DEPLOYMENT_GROUP_NAME }}
  S3_LOCATION_BUCKET: ${{ secrets.S3_LOCATION_BUCKET }}
  CODEDEPLOY_APPLICATION_NAME: ${{ secrets.CODEDEPLOY_APPLICATION_NAME }}

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    # gradelw 실행권한 부여
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    # Build with Gradle
    - name: Build with Gradle
      uses: gradle/gradle-build-action@v2 # v2.6.0
      with:
        arguments: build
    # AWS 인증(IAM 사용자 Access Key, Secret Key, aws region)
    - name: Configur AWS Credentials
      uses: aws-actions/cofigure-aws-credentials@v1-node16
      with:
        aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    - name: Upload to S3
      run: |
        aws deploy push \
          --application-name ${{ env.CODEDEPLOY_APPLICATION_NAME }} \
          --ignore-hidden-files \ 
          --s3-location s3://$S3_LOCATION_BUCKET/$GITHUB_SHA.zip \
          --source .
          
    # 빌드결과물을 S3 버킷에 업로드 (codedeploy 어플리케이션 이름, 버킷 이름)
    # S3 버킷에 있는 파일을 대상으로 EC2에 배포(codedeploy 어플리케이션 그룹 이름, codedeploy 어플리케이션 이름, 버킷 이름)
